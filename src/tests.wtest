import modelo.*

describe "Entrega 1" {
	
	const rolando = new Guerrero()
	const espectroMalefico = new HechizoDeLogo()
	
	fixture {
		espectroMalefico.nombre("Espectro maléfico")
		espectroMalefico.multiplicador(1)
		
	 	rolando.agregar(espadaDelDestino)
		rolando.agregar(collarDivino)
		rolando.agregar(mascaraOscura)
		collarDivino.cantidadPerlas(5)
		rolando.hechizoPreferido(espectroMalefico)
	}
	
	method cargarARolando(){
		rolando.agregar(armadura)
		rolando.agregar(espejo)
	}

	test "Nivel de hechicería de Rolando" {
		assert.equals(56, rolando.nivelHechiceria())
	}
	
	test "Nivel de hechicería de Rolando tras cambiar nombre al hechizo" {
		espectroMalefico.nombre("espectro superrecontramalefico muajajaja")
		assert.equals(125, rolando.nivelHechiceria())
	}
	
	test "Nivel de hechicería de Rolando con hechizo básico" {
		rolando.hechizoPreferido(hechizoBasico)
		assert.equals(35, rolando.nivelHechiceria())
	}
	
	test "Nivel de hechicería de Rolando tras eclipse" {
		fuerzaOscura.eclipsar()
		assert.equals(61, rolando.nivelHechiceria())
	}
	
	test "Espectro maléfico es poderoso" {
		assert.that(espectroMalefico.esPoderoso())
	}
	
	test "Espectro maléfico de nombre pepe no es poderoso" {
		espectroMalefico.nombre("pepe")
		assert.notThat(espectroMalefico.esPoderoso())
	}
	
	test "Hechizo básico no es poderoso" {
		assert.notThat(hechizoBasico.esPoderoso())
	}
	
	test "Valor de lucha de Rolando sin artefactos" {
	 	rolando.quitar(espadaDelDestino)
		rolando.quitar(collarDivino)
		rolando.quitar(mascaraOscura)
		assert.equals(1, rolando.habilidadLucha())
	}
	
	test "Valor de lucha de Rolando con artefactos" {
		assert.equals(13, rolando.habilidadLucha())
	}
	
	test "Valor de lucha de Rolando con artefactos y collar con 3 perlas" {
		collarDivino.cantidadPerlas(3)
		assert.equals(11, rolando.habilidadLucha())
	}
	
	test "Valor de lucha de Rolando con artefactos y base lucha 8" {
		rolando.valorBaseLucha(8)
		assert.equals(20, rolando.habilidadLucha())
	}
	
	test "Valor lucha máscara oscura tras eclipse" {
		fuerzaOscura.eclipsar()
		assert.equals(5, mascaraOscura.habilidadLucha(rolando))
	}
	
	test "Valor de lucha de Rolando sin máscara oscura" {
		rolando.quitar(mascaraOscura)
		assert.equals(9, rolando.habilidadLucha())
	}
	
	test "Saber si Rolando está cargado" {
		self.cargarARolando()
		assert.that(rolando.estaCargado())
	}

	test "Saber si Rolando está cargado sin armadura" {
		self.cargarARolando()
		rolando.quitar(armadura)
		assert.notThat(rolando.estaCargado())
	}

	test "Saber habilidad de lucha de Rolando cargado" {
		self.cargarARolando()
		assert.equals(20, rolando.habilidadLucha())
	}
	
	test "Saber habilidad de lucha de armadura con bendición" {
		armadura.refuerzo(bendicion)
		assert.equals(58, armadura.habilidadLucha(rolando))
	}
	
	test "Saber habilidad de lucha de armadura con cota de malla" {
		armadura.refuerzo(cotaDeMalla)
		assert.equals(3, armadura.habilidadLucha(rolando))
	}
	
	test "Saber habilidad de lucha de armadura con hechizo básico" {
		armadura.refuerzo(hechizoBasico)
		assert.equals(12, armadura.habilidadLucha(rolando))
	}

	test "Saber habilidad de lucha de armadura con espectro maléfico" {
		armadura.refuerzo(espectroMalefico)
		assert.equals(19, armadura.habilidadLucha(rolando))
	}
	
	test "Valor de lucha de Rolando sólo con espejo" {
	 	self.cargarARolando()
	 	rolando.quitar(espadaDelDestino)
		rolando.quitar(collarDivino)
		rolando.quitar(mascaraOscura)
		rolando.quitar(armadura)
		assert.equals(1, rolando.habilidadLucha())
	}
	
	test "Valor de lucha de Rolando con libro de hechizos" {
	 	self.cargarARolando()
	 	rolando.hechizoPreferido(libroDeHechizos)
	 	libroDeHechizos.agregar(espectroMalefico)
	 	libroDeHechizos.agregar(hechizoBasico)
		assert.equals(56, rolando.nivelHechiceria())
	}
}